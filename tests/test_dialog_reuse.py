#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤.
–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—É—á–∞—é—Ç –≤—ã—Å–æ–∫–∏–π score (‚â•0.95) –¥–ª—è –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
"""

import os
import sys
import asyncio
import aiohttp

# –î–æ–±–∞–≤–ª—è–µ–º backend –≤ –ø—É—Ç—å
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

from backend.agents.kb_search import kb_search


async def test_dialog_reuse():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞ –ø–æ—Ö–æ–∂–∏—Ö –¥–∏–∞–ª–æ–≥–æ–≤"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –¥–∏–∞–ª–æ–≥–æ–≤...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ—á–Ω–æ —Ç–æ—Ç –∂–µ –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ
    test_question = "–ß—Ç–æ —Ç–∞–∫–æ–µ DLP?"
    
    try:
        status, result = await kb_search(test_question)
        
        print(f"üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞: '{test_question}'")
        print(f"üìÑ –¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {type(result)}")
        print(f"üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {result}")
        
        # –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç - —Å–ø–∏—Å–æ–∫ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —á–∞—Å—Ç–µ–π, –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Ö
        if isinstance(result, list):
            for i, item in enumerate(result):
                print(f"  –≠–ª–µ–º–µ–Ω—Ç {i}: {item}")
        
        # –ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ score –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
        result_str = str(result)
        if 'score' in result_str.lower() or 'similar' in result_str.lower():
            print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ similarity score –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ!")
        else:
            print("‚ö†Ô∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ score –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ")
            
        return result
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–∏—Å–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤: {e}")
        import traceback
        traceback.print_exc()
        return None


if __name__ == "__main__":
    asyncio.run(test_dialog_reuse())
