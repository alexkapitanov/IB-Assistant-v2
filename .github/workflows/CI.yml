name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test-build:
    runs-on: ubuntu-latest

    services:            # инфраструктура для pytest
      redis:
        image: redis:7
        ports: ['6379:6379']
      qdrant:
        image: qdrant/qdrant
        ports: ['6333:6333']
      minio:
        image: bitnami/minio:latest
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        options: >-
          --health-cmd "curl -f http://localhost:9000/minio/health/ready || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5
        ports: ['9000:9000']

    steps:
      - uses: actions/checkout@v3

      # ---------- Backend tests ----------
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install backend deps
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y netcat-openbsd
          pip install -r backend/requirements.txt --quiet

      - name: Wait for services
        run: |
          echo "Waiting for Qdrant..."
          timeout 60s bash -c 'until curl -f http://localhost:6333/collections; do sleep 2; done'
          echo "Waiting for MinIO..."
          timeout 60s bash -c 'until curl -f http://localhost:9000/minio/health/ready; do sleep 2; done'
          echo "Waiting for Redis..."
          timeout 60s bash -c 'until nc -z localhost 6379; do sleep 2; done'
          echo "All services are ready!"

      - name: Run pytest
        env:
          PYTHONPATH: ${{ github.workspace }}
          REDIS_HOST: localhost
          QDRANT_HOST: localhost
          MINIO_ENDPOINT: localhost:9000
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin
          DB_PATH: /tmp/test-chatlog.db
        run: pytest -q        # тесты обязаны быть зелёными

      # ---------- Docker build ----------
      - name: Build backend image
        run: docker build -f backend/Dockerfile -t ib-backend .
