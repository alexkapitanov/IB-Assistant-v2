#!/usr/bin/env python3
"""
–¢–µ—Å—Ç WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å backend —á–µ—Ä–µ–∑ Docker —Å–µ—Ç—å
"""

import asyncio
import websockets
import json
import pytest


@pytest.mark.integration
@pytest.mark.asyncio
async def test_websocket():
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    uri = "ws://localhost:8000/ws"
    print(f"–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ {uri}...")
    
    try:
        async with websockets.connect(uri) as websocket:
            print("‚úÖ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            test_message = {
                "content": "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç.",
                "chat_id": "test-chat-123"
            }
            
            await websocket.send(json.dumps(test_message))
            print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {test_message}")
            
            # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç
            print("‚è≥ –ñ–¥–µ–º –æ—Ç–≤–µ—Ç...")
            
            try:
                response = await asyncio.wait_for(websocket.recv(), timeout=5.0)
                print(f"üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: {response}")
            except asyncio.TimeoutError:
                print("‚è∞ Timeout - –æ—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω –∑–∞ 5 —Å–µ–∫")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    asyncio.run(test_websocket())
